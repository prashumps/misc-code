- name: Download repo file
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/rhel/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: install docker
  ansible.builtin.dnf:
    name: docker-ce
    state: installed

- name: Copy Docker Service file
  ansible.builtin.template:
    src: docker.service
    dest: /etc/systemd/system/multi-user.target.wants/docker.service

- name: Start docker
  ansible.builtin.shell: |
    systemctl daemon-reload
    systemctl restart docker

- name: Get Runner token
  ansible.builtin.shell: |
    gh api --method POST -H "Accept:application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28"   /orgs/prashumps/actions/runners/registration-token | jq .token | xargs
  delegate_to: localhost
  register: gh_auth_token

#- block:
#    - name: Check root filesystem usage
#      ansible.builtin.shell: df -P / | awk 'NR==2 {print $5}' | sed 's/%//'
#      register: disk_use
#      changed_when: false
#
#    - name: Get all github-runner image IDs sorted by creation date (latest first)
#      ansible.builtin.command: docker images prasanthreddymps/github-runner --format '{{.ID}}' --no-trunc --sort=created
#      register: runner_images
#      when: disk_use.stdout | int > 85
#
#    - name: Remove old github-runner images (keep latest)
#      ansible.builtin.command: docker rmi {{ item }}
#      loop: "{{ runner_images.stdout_lines[1:] }}"
#      when: disk_use.stdout | int > 85 and runner_images.stdout_lines | length > 1
#      ignore_errors: true
#  when: disk_use.stdout | int > 85

- name: Create runner containers
  loop:
    - runner-1
    - runner-2
    - runner-3
  community.docker.docker_container:
    name: "{{ item }}"
    image: prasanthreddymps/github-runner
    state: started
    pull: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: true
    restart_policy: always
    env:
      ORG: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=roboshop-infra/data/github-runner:ORG token={{ token }} url=http://vault-int.prashumps.online:8200') }}"
      TOKEN: "{{ gh_auth_token.stdout }}"
      NAME: "{{ item }}"
      ARM_CLIENT_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=roboshop-infra/data/azure-sp:ARM_CLIENT_ID token={{ token }} url=http://vault-int.prashumps.online:8200') }}"
      ARM_CLIENT_SECRET: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=roboshop-infra/data/azure-sp:ARM_CLIENT_SECRET token={{ token }} url=http://vault-int.prashumps.online:8200') }}"
      ARM_TENANT_ID: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=roboshop-infra/data/azure-sp:ARM_TENANT_ID token={{ token }} url=http://vault-int.prashumps.online:8200') }}"
